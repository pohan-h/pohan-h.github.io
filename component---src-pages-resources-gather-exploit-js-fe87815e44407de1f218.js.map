{"version":3,"file":"component---src-pages-resources-gather-exploit-js-fe87815e44407de1f218.js","mappings":"8KA0HA,UAtH6B,KAC3B,MAAM,EAACA,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,OAC7C,EAACC,EAAe,EAACC,IAAqBF,EAAAA,EAAAA,UAAS,OAErDG,EAAAA,EAAAA,YAAU,KAER,mCAAwCC,MAAKC,IAC3CN,EAAiBM,EAAK,GACtB,GACD,IAUH,OACE,gBAAC,IAAM,KACL,0BAAI,WACJ,yBAAG,gCAED,gBAAC,EAAAC,KAAI,CAACC,GAAG,cAAa,MAAS,wBAGjC,0BAAI,cACJ,yBAAG,eAEH,0BAAI,MACHT,EACC,uBAAKU,MAAO,CAAEC,QAAS,OAAQC,SAAU,OAAQC,IAAK,SACnDb,EAAcc,MAAMC,KAAI,CAACC,EAAMC,IAC9B,uBAAKC,IAAKD,EAAOP,MAAO,CAAES,KAAM,YAAaC,SAAU,UACrD,0BAAKJ,EAAKK,UACV,6BACE,6BACE,0BACE,sBAAIX,MAAO,CAAEY,QAAS,YAAaC,UAAW,SAAU,MACxD,sBAAIb,MAAO,CAAEY,QAAS,YAAaC,UAAW,SAAU,UAG5D,6BACGP,EAAKQ,OAAOT,KAAI,CAACU,EAAWC,IAC3B,sBAAIR,IAAKQ,GACP,sBAAIhB,MAAO,CAAEY,QAAS,aAAeG,EAAUE,OAC/C,sBAAIjB,MAAO,CAAEY,QAAS,aAAeG,EAAUG,mBAS7D,yBAAG,UAEL,2BAEA,0BAAI,QAEJ,0BAAI,QACJ,0BACE,0BAAI,gBAAC,EAAApB,KAAI,CAACC,GAAG,YAAW,MAAS,iBACjC,0BAAI,yBAEN,0BAAI,YACHT,EACC,6BACE,6BACE,0BACE,sBAAIU,MAAO,CAAEY,QAAS,YAAaC,UAAW,SAAU,QACxD,sBAAIb,MAAO,CAAEY,QAAS,YAAaC,UAAW,SAAU,UACxD,sBAAIb,MAAO,CAAEY,QAAS,YAAaC,UAAW,SAAU,UAG5D,6BACGvB,EAAc6B,mBAAmBd,KAAI,CAACe,EAAUb,IAC/C,gBAAC,WAAc,CAACC,IAAKD,GACnB,0BACE,sBAAIP,MAAO,CAAEY,QAAS,aAAeQ,EAAST,UAC9C,sBAAIX,MAAO,CAAEY,QAAS,aAAeQ,EAASC,YAC9C,sBAAIrB,MAAO,CAAEY,QAAS,aACpB,0BACEU,QAAS,IA1EPf,KAElBb,EADED,IAAmBc,EACH,KAEAA,EACpB,EAqEiCgB,CAAahB,GAC5BP,MAAO,CAAEwB,OAAQ,UAAWC,MAAO,OAAQC,WAAY,OAAQC,OAAQ,OAAQf,QAAS,IAAKgB,eAAgB,aAC7G,gBAAenC,IAAmBc,EAAQ,OAAS,SAElDd,IAAmBc,EAAQ,KAAO,QAIxCd,IAAmBc,GAClB,0BACE,sBAAIsB,QAAQ,IAAI7B,MAAO,CAAEY,QAAS,aAChC,yBAAG,SACH,sBAAIZ,MAAO,CAAE8B,cAAe,OAAQlB,QAAS,IAC1CQ,EAASW,YAAY1B,KAAI,CAAC2B,EAAMhB,IAC/B,sBAAIR,IAAKQ,EAAKhB,MAAO,CAAEC,QAAS,SAAUgC,YAAa,SAAWD,aAWpF,yBAAG,UAIE,C","sources":["webpack://gatsby-starter-default/./src/pages/resources/gather&exploit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../../components/layout\"\n\nconst GatherAndExploitPage = () => {\n  const [resourcesData, setResourcesData] = useState(null)\n  const [expandedPlanet, setExpandedPlanet] = useState(null) // 用於控制哪個行星展開\n\n  useEffect(() => {\n    // Fetching the data from the JSON file\n    import(\"../../data/resourcesData.json\").then(data => {\n      setResourcesData(data)\n    })\n  }, [])\n\n  const toggleExpand = (index) => {\n    if (expandedPlanet === index) {\n      setExpandedPlanet(null) // 如果再次點擊已展開的行星，則折疊\n    } else {\n      setExpandedPlanet(index) // 展開當前行星\n    }\n  }\n\n  return (\n    <Layout>\n      <h1>資源採集與開發</h1>\n      <p>\n        在這遊戲中，可以透過資源採集與開發分別在礦場與行星平台獲取\n        <Link to=\"/resources\">資源</Link>（當然，你也可以透過攻擊別人來獲取資源）\n      </p>\n\n      <h2>採集與開發之艦船配置</h2>\n      <p>採集艦隊配置跟其他細節</p>\n\n      <h2>礦場</h2>\n      {resourcesData ? (\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\n          {resourcesData.mines.map((mine, index) => (\n            <div key={index} style={{ flex: '1 1 300px', minWidth: '300px' }}>\n              <h3>{mine.resource}</h3>\n              <table>\n                <thead>\n                  <tr>\n                    <th style={{ padding: '10px 20px', textAlign: 'left' }}>等級</th>\n                    <th style={{ padding: '10px 20px', textAlign: 'left' }}>資源儲量</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {mine.levels.map((levelData, idx) => (\n                    <tr key={idx}>\n                      <td style={{ padding: '8px 20px' }}>{levelData.level}</td>\n                      <td style={{ padding: '8px 20px' }}>{levelData.capacity}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>加載中...</p>\n      )}\n      <br/>\n\n      <h2>行星平台</h2>\n\n      <h3>行星類型</h3>\n      <ul>\n        <li><Link to=\"/explore\">探索</Link>不同行星類型可獲的豐富獎勵</li>\n        <li>不同類型的行星平台可開發出不同種類資源。</li>\n      </ul>\n      <h3>行星平台資料列表</h3>\n      {resourcesData ? (\n        <table>\n          <thead>\n            <tr>\n              <th style={{ padding: '10px 20px', textAlign: 'left' }}>資源種類</th>\n              <th style={{ padding: '10px 20px', textAlign: 'left' }}>資源生產效率</th>\n              <th style={{ padding: '10px 20px', textAlign: 'left' }}>行星種類</th>\n            </tr>\n          </thead>\n          <tbody>\n            {resourcesData.planetaryPlatforms.map((platform, index) => (\n              <React.Fragment key={index}>\n                <tr>\n                  <td style={{ padding: '8px 20px' }}>{platform.resource}</td>\n                  <td style={{ padding: '8px 20px' }}>{platform.efficiency}</td>\n                  <td style={{ padding: '8px 20px' }}>\n                    <button \n                      onClick={() => toggleExpand(index)}\n                      style={{ cursor: 'pointer', color: 'blue', background: 'none', border: 'none', padding: '0', textDecoration: 'underline' }}\n                      aria-expanded={expandedPlanet === index ? \"true\" : \"false\"}\n                    >\n                      {expandedPlanet === index ? \"收起\" : \"展開\"}\n                    </button>\n                  </td>\n                </tr>\n                {expandedPlanet === index && (\n                  <tr>\n                    <td colSpan=\"3\" style={{ padding: '8px 20px' }}>\n                      <p>行星種類:</p>\n                      <ul style={{ listStyleType: 'none', padding: 0 }}>\n                        {platform.planetTypes.map((type, idx) => (\n                          <li key={idx} style={{ display: 'inline', marginRight: '20px' }}>{type}</li>\n                        ))}\n                      </ul>\n                    </td>\n                  </tr>\n                )}\n              </React.Fragment>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>加載中...</p>\n      )}\n      \n      \n    </Layout>\n  )\n}\n\nexport default GatherAndExploitPage\n"],"names":["resourcesData","setResourcesData","useState","expandedPlanet","setExpandedPlanet","useEffect","then","data","Link","to","style","display","flexWrap","gap","mines","map","mine","index","key","flex","minWidth","resource","padding","textAlign","levels","levelData","idx","level","capacity","planetaryPlatforms","platform","efficiency","onClick","toggleExpand","cursor","color","background","border","textDecoration","colSpan","listStyleType","planetTypes","type","marginRight"],"sourceRoot":""}