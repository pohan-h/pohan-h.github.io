{"version":3,"file":"component---src-pages-fleet-ships-js-a18c540a156f1d9d0dac.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/fleet/ships.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport { Line } from 'react-chartjs-2'\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js'\n\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend)\n\nconst ShipPage = () => {\n  const [shipData, setShipData] = useState(null)\n\n  useEffect(() => {\n    // 加載艦船數據\n    import(\"../../data/shipsData.json\").then(data => {\n      setShipData(data)\n    })\n  }, [])\n\n  // 繪製圖表的數據格式化\n  const createChartData = (shipType, attribute) => {\n    return shipData ? {\n      labels: shipData[shipType].map(ship => `Level ${ship.level}`),\n      datasets: [{\n        label: `${shipType} - ${attribute}`,\n        data: shipData[shipType].map(ship => ship[attribute]),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: true\n      }]\n    } : null\n  }\n\n  // 根據艦船的 type 來返回相應的中文名稱\n  const getShipTypeName = (type) => {\n    if (type === 'Missile') return '導彈';\n    if (type === 'Laser') return '雷射';\n    if (type === 'Kinetic') return '動能';\n    return type; // fallback if type doesn't match\n  }\n\n  // 創建數據表格，添加 text-align: center 居中對齊\n  const createTable = (shipType) => {\n    return (\n      <table style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n        <thead>\n          <tr>\n            <th>等級</th>\n            <th>艦船名稱</th>\n            <th>類型</th>\n            <th>戰力</th>\n            <th>載重</th>\n            <th>生命值</th>\n            <th>裝甲</th>\n            <th>護盾</th>\n            <th>傷害輸出</th>\n          </tr>\n        </thead>\n        <tbody>\n          {shipData[shipType].map((ship, idx) => (\n            <tr key={idx}>\n              <td>{ship.level}</td>\n              <td>{ship.ship_name}</td>\n              <td>{getShipTypeName(ship.type)}</td> {/* 顯示類型中文名稱 */}\n              <td>{ship.power}</td> {/* 戰力 */}\n              <td>{ship.load}</td>\n              <td>{ship.HP}</td>\n              <td>{ship.armor}</td>\n              <td>{ship.shield}</td>\n              <td>{ship.damage_output}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  }\n\n  // 創建所有艦船大比較的數據（疊加）\n  const createComparisonChart = (attribute, leadership) => {\n    return shipData ? {\n      labels: shipData.frigate.map(ship => `Level ${ship.level}`), // 假設所有艦船的等級數據一致\n      datasets: [\n        {\n          label: '護衛艦',\n          data: shipData.frigate.map(ship => ship[attribute] / leadership.frigate),\n          borderColor: 'rgba(75, 192, 192, 1)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          fill: true\n        },\n        {\n          label: '驅逐艦',\n          data: shipData.destroyer.map(ship => ship[attribute] / leadership.destroyer),\n          borderColor: 'rgba(153, 102, 255, 1)',\n          backgroundColor: 'rgba(153, 102, 255, 0.2)',\n          fill: true\n        },\n        {\n          label: '巡洋艦',\n          data: shipData.cruiser.map(ship => ship[attribute] / leadership.cruiser),\n          borderColor: 'rgba(255, 159, 64, 1)',\n          backgroundColor: 'rgba(255, 159, 64, 0.2)',\n          fill: true\n        }\n      ]\n    } : null\n  }\n\n  return (\n    <Layout>\n      <h1>艦船資料</h1>\n      <p>這裡提供艦船的詳細資料</p>\n      <sub><font color=\"grey\">資料是我從該遊戲中造船的那裡一個一個抄下來的，希望能讓大家方便。另外感謝我弟幫忙整理驅逐艦的資料</font></sub>\n      \n      <p>艦船的重點整理可參考<Link to=\"/fleet\">艦隊</Link>頁面</p>\n\n      {shipData ? (\n        <div>\n          {/* 護衛艦部分 */}\n          <h2>護衛艦</h2>\n          <p>護衛艦是一種小型的戰鬥艦艇。雖然在低階不明顯，但在高階艦船中護航艦耐久跟護盾明顯超出其他兩種艦船。裝甲則是不管階數都遠超其他兩者，高階更多。因此護衛艦是重要的<b>防禦性</b>艦船</p>\n          <p>另外，在<Link to=\"/fff\">戰役</Link>關卡中，由於一次可以叫出（呼叫？請求？）三艘，可針對敵方的雷射武器對自身旗艦做出比其他兩者更加強而有力的保護。<sub>此特點會於<Link to=\"/fff\">戰役</Link>頁面中做更詳細解釋</sub></p>\n          <ul>\n            <li>航行速度：最快</li>\n            <li>單位領導力載重：最低</li>\n            <li>克制：驅逐艦</li>\n          </ul>\n\n          {createTable('frigate')} {/* 添加護衛艦數據表格 */}\n          <Line data={createChartData('frigate', 'load')} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '護衛艦 - 載重' } } }} />\n          <Line data={createChartData('frigate', 'damage_output')} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '護衛艦 - 傷害輸出' } } }} />\n\n          {/* 驅逐艦部分 */}\n          <h2>驅逐艦</h2>\n          <p>驅逐艦是中型的戰艦，鑑於其極高的<b>載重</b>能力，為用來<b>挖礦</b>的重要艦船。</p>\n          <p>其單位領導力下的傷害輸出略高於其他兩者。</p>\n          <p><strong>很重要：從下表可看出，2階驅逐艦載重高於8階之前的所有驅逐艦，因此在8階之前可以造一些2階驅逐艦來挖礦</strong></p>\n          <ul>\n            <li>航行速度：中等</li>\n            <li>單位領導力載重：最高</li>\n            <li>克制：巡洋艦</li>\n          </ul>\n          {createTable('destroyer')} {/* 添加驅逐艦數據表格 */}\n          <Line data={createChartData('destroyer', 'load')} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '驅逐艦 - 載重' } } }} />\n          <Line data={createChartData('destroyer', 'damage_output')} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '驅逐艦 - 傷害輸出' } } }} />\n\n          {/* 巡洋艦部分 */}\n          <h2>巡洋艦</h2>\n          <p>巡洋艦是一種大型戰艦。雖然數值上都低於其他兩者，但會他克制護衛艦。因此也是有某種優勢？</p>\n          <p>因為我也不太懂克制的具體數值，所以我去查了目前最大的<a href=\"https://infinite-galaxy.fandom.com/wiki/\">目前最大的infinite galaxy維基</a>，上面說沒有明顯感覺出克制。<sub>如果有大佬了解克制機制的數值（或大概）請聯絡我</sub></p>\n          <ul>\n            <li>航行速度：最慢</li>\n            <li>單位領導力載重：中等</li>\n            <li>克制：護衛艦</li>\n          </ul>\n          {createTable('cruiser')} {/* 添加巡洋艦數據表格 */}\n          <Line data={createChartData('cruiser', 'load')} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '巡洋艦 - 載重' } } }} />\n          <Line data={createChartData('cruiser', 'damage_output')} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '巡洋艦 - 傷害輸出' } } }} />\n\n          {/* 艦船大比較 */}    \n          <h2>艦船大比較</h2>\n\n          {/* 單位領導力戰力比較 */}\n          <Line data={createComparisonChart('power', { frigate: 3, destroyer: 10, cruiser: 30 })} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '所有艦船 - 單位領導力戰力比較' } } }} />\n          <p>由上述圖表可知，不同種類艦船在相同階數下單位領導力戰力基本相同</p>\n\n          {/* 單位領導力載重比較 */}\n         <Line data={createComparisonChart('load', { frigate: 3, destroyer: 10, cruiser: 30 })} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '所有艦船 - 單位領導力載重比較' } } }} />\n\n          {/* 單位領導力傷害輸出比較 */}\n          <Line data={createComparisonChart('damage_output', { frigate: 3, destroyer: 10, cruiser: 30 })} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '所有艦船 - 單位領導力傷害輸出比較' } } }} />\n\n          {/* 單位領導力生命值比較 */}\n          <Line data={createComparisonChart('HP', { frigate: 3, destroyer: 10, cruiser: 30 })} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '所有艦船 - 單位領導力生命值比較' } } }} />\n\n          {/* 單位領導力裝甲比較 */}\n          <Line data={createComparisonChart('armor', { frigate: 3, destroyer: 10, cruiser: 30 })} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '所有艦船 - 單位領導力裝甲比較' } } }} />\n\n          {/* 單位領導力護盾比較 */}\n          <Line data={createComparisonChart('shield', { frigate: 3, destroyer: 10, cruiser: 30 })} options={{ responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '所有艦船 - 單位領導力護盾比較' } } }} />\n\n        </div>\n      ) : (\n        <p>加載中...</p>\n      )}\n    </Layout>\n  )\n}\n\nexport const Head = () => (\n  <Seo \n    title=\"艦船頁面\" \n    description=\"這裡整理了infinite galaxy中艦船的詳細資料\"\n    lang=\"zh-Hant\"\n  />\n)\n\nexport default ShipPage\n"],"names":["ChartJS","register","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","Head","React","Seo","title","description","lang","ShipPage","shipData","setShipData","useState","useEffect","then","data","createChartData","shipType","attribute","labels","map","ship","level","datasets","label","borderColor","backgroundColor","fill","createTable","style","width","textAlign","marginTop","idx","key","ship_name","type","power","load","HP","armor","shield","damage_output","createComparisonChart","leadership","frigate","destroyer","cruiser","Layout","color","Link","to","Line","options","responsive","plugins","legend","position","display","text","href"],"sourceRoot":""}